#!/bin/bash
set -e

true > /opt/kafka/config/server.properties

S_CONFIG="/opt/kafka/config/server.properties"
    {
    echo "broker.id=${KAFKA_BROKER_ID:-1}"
    echo "listeners=${KAFKA_CFG_LISTENERS:-INTERNAL://:9093,CLIENT://:9092,EXTERNAL://:9094}"
    echo "advertised.listeners=$ADVERTISED_LISTENER"
    echo "zookeeper.connect=$KAFKA_CFG_ZOOKEEPER_CONNECT"
    echo "inter.broker.listener.name=${KAFKA_INTER_BROKER_LISTENER_NAME:-CLIENT}"
    echo "listener.security.protocol.map=${KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP:-INTERNAL:PLAINTEXT,CLIENT:SSL,EXTERNAL:SSL}"
    echo "log.dirs=${KAFKA_LOG_DIR:-'/kafka-logs'}"
    echo "num.network.threads=${KAFKA_CFG_NUM_NETWORK_THREADS:-3}"
    echo "num.io.threads=${KAFKA_CFG_NUM_IO_THREADS:-8}"
    echo "socket.send.buffer.bytes=${KAFKA_CFG_SOCKET_SEND_BUFFER_BYTES:-102400}"
    echo "socket.receive.buffer.bytes=${KAFKA_CFG_SOCKET_RECEIVE_BUFFER_BYTES:-102400}"
    echo "socket.request.max.bytes=${KAFKA_CFG_SOCKET_REQUEST_MAX_BYTES:-104857600}"
    echo "num.partitions=${KAFKA_CFG_NUM_PARTITIONS:-3}"
    echo "num.recovery.threads.per.data.dir=${KAFKA_CFG_NUM_RECOVERY_THREADS_PER_DATA_DIR:-1}"
    echo "offsets.topic.replication.factor=${KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR:-1}"
    echo "transaction.state.log.replication.factor=${KAFKA_CFG_TRANSACTION_STATE_LOG_REPLICATION_FACTOR:-1}"
    echo "transaction.state.log.min.isr=${KAFKA_CFG_TRANSACTION_STATE_LOG_MIN_ISR:-1}"
    echo "log.retention.hours=${KAFKA_CFG_LOG_RETENTION_HOURS:-168}"
    echo "log.segment.bytes=${KAFKA_CFG_LOG_SEGMENT_BYTES:-1073741824}"
    echo "log.retention.check.interval.ms=${KAFKA_CFG_LOG_RETENTION_CHECK_INTERVALS_MS:-300000}"
    echo "zookeeper.connection.timeout.ms=${KAFKA_CFG_ZOOKEEPER_CONNECTION_TIMEOUT_MS:-6000}"
    echo "group.initial.rebalance.delay.ms=${KAFKA_CFG_GROUP_INITIAL_REBALANCE_DELAY_MS:-0}"
    echo "#authorizer.class.name=${KAFKA_CFG_AUTHORIZER_CLASS_NAME:-kafka.security.auth.SimpleAclAuthorizer}"
    echo "   "
    echo "   "
    echo "   "
    echo "   "
    echo "# Properties for SSL Kafka Security between Broker and its clients"
    echo "ssl.truststore.location=$KAFKA_CFG_KAFKA_TRUST_STORE_PATH"
    echo "ssl.truststore.password=$KAFKA_CFG_KAFKA_TRUST_STORE_PASSWORD"
    echo "ssl.keystore.location=$KAFKA_CFG_KAFKA_KEY_STORE_PATH"
    echo "ssl.keystore.password=$KAFKA_CFG_KAFKA_KEY_STORE_PASSWORD"
    echo "ssl.key.password=$KAFKA_CFG_CA_KEY_PASSWORD"
    echo "security.inter.broker.protocol=${KAFKA_CFG_KAFKA_INTER_BROKER_PROTOCOL:-SSL}"
    echo "ssl.client.auth=${KAFKA_CFG_SSL_CLIENT_AUTH:-required}"
    echo "ssl.protocol=${KAFKA_CFG_SSL_PROTOCOL:-TLSv1.2}"
    echo "   "
    echo "   "
    echo "   "
    echo "   "
    echo "# Properties for SSL Zookeeper Security between Zookeeper and Broker"
    echo "zookeeper.clientCnxnSocket=${KAFKA_CFG_ZOOKEEPER_CLIENT_CNXN:-org.apache.zookeeper.ClientCnxnSocketNetty}"
    echo "zookeeper.ssl.client.enable=${KAFKA_CFG_ZOOKEEPER_SSL_CLIENT_ENABLE:-true}"
    echo "zookeeper.ssl.protocol=${KAFKA_CFG_ZOOKEEPER_SSL_PROTOCOL:-TLSv1.2}"
    echo "zookeeper.ssl.truststore.location=$KAFKA_CFG_ZOOKEEPER_TRUST_STORE_PATH"
    echo "zookeeper.ssl.truststore.password=$KAFKA_CFG_ZOOKEEPER_TRUST_STORE_PASSWORD"
    echo "zookeeper.ssl.keystore.location=$KAFKA_CFG_ZOOKEEPER_KEY_STORE_PATH"
    echo "zookeeper.ssl.keystore.password=$KAFKA_CFG_ZOOKEEPER_KEY_STORE_PASSWORD"
    echo "zookeeper.set.acl=${KAFKA_CFG_ZOOKEEPER_SET_ACL:-true}"
    echo "   "
    echo "   "
    echo "   "
    echo "   "
    } > "$S_CONFIG"

exec "$@"